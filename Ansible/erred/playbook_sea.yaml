- name: Creating Resources in SEA Region
  hosts: localhost
  connection: local
  vars_files:
    - "./vars/vars_sea.yaml"
  tasks:
    # Creating a Resource Group
  - name: Create resource group
    azure_rm_resourcegroup:
      name: mknilavembu_sea
      location: australiaeast
      tags:
        business: nilavembu
        region: southeastasia
    register: rg
  - name: Provide RG Details
    debug:
      msg: "The Resource Group {{ rg.state.name }} in the location {{ rg.state.location}}."
  # Creating a Virtual Network
  - name: Create virtual network
    azure_rm_virtualnetwork:
      resource_group: mknilavembu_sea
      name: seavnet
      address_prefixes: "10.0.0.0/8"
  # Create Subnets
  ## For Web
  - name: Add subnet for web
    azure_rm_subnet:
      resource_group: mknilavembu_sea
      name: sea_web_subnet
      address_prefix: "10.1.0.0/24"
      virtual_network: seavnet
  ## For Jump
  - name: Add subnet for jump
    azure_rm_subnet:
      resource_group: mknilavembu_sea
      name: sea_jump_subnet
      address_prefix: "10.2.0.0/24"
      virtual_network: seavnet
  # Creating an Application Security Group
  ## For Web Servers
  - name: Create application security group for Web Servers
    azure_rm_applicationsecuritygroup:
      resource_group: mknilavembu_sea
      name: sea_web_asg
      location: australiaeast
  ## For Jump Servers
  - name: Create application security group for Jump Servers
    azure_rm_applicationsecuritygroup:
      resource_group: mknilavembu_sea
      name: sea_jump_asg
      location: australiaeast
  # Creating an Network Security Group
  - name: Create Network Security Group that allows Web Traffic
    azure_rm_securitygroup:
      resource_group: mknilavembu_sea
      name: sea_nsg
      rules:
      - name: Allow_HTTP_S
        protocol: Tcp
        destination_port_range:
        - 80
        - 443
        destination_application_security_groups:
        - sea_web_asg
        access: Allow
        priority: 1001
        direction: Inbound
      - name: Allow_FTP
        protocol: Tcp
        source_application_security_groups:
        - sea_jump_asg
        destination_port_range: 22
        destination_application_security_groups:
        - sea_web_asg
        access: Allow
        priority: 1020
        direction: Inbound
      - name: Allow_RDP
        protocol: Tcp
        destination_port_range: 3389
        access: Allow
        priority: 1040
        direction: Inbound
  # Creating a Public IP Address for Jump Server
  - name: Create public IP address
    azure_rm_publicipaddress:
      resource_group: mknilavembu_sea
      allocation_method: Static
      name: jump_pubip
    register: ip1
  - name: Dump public IP for Jump Server
    debug:
      msg: "The public IP for Jump Server is {{ ip1.state.ip_address }}."
  # Creating a Public IP Address for Load Balancer
  - name: Create public IP address
    azure_rm_publicipaddress:
      resource_group: mknilavembu_sea
      allocation_method: Static
      name: lb_pubip
    register: lb_feip
  - name: Dump public IP for Jump Server
    debug:
      msg: "The public IP of Load Balancer is {{ lb_feip.state.ip_address }}."
  # Creating a Load Balancer for Web Server
  - name: Create load balancer
    azure_rm_loadbalancer:
      resource_group: mknilavembu_sea
      name: sea_lb
      frontend_ip_configurations:
      - name: lb_fip
        public_ip_address: lb_pubip
      backend_address_pools:
      - name: lb_bp
      probes:
      - name: prob0
        port: 80
      load_balancing_rules:
      - name: lbrbalancingrule0
        frontend_ip_configuration: lb_fip
        backend_address_pool: lb_bp
        frontend_port: 80
        backend_port: 80
        probe: prob0
      - name: lbrbalancingrule1
        frontend_ip_configuration: lb_fip
        backend_address_pool: lb_bp
        frontend_port: 443
        backend_port: 443
        probe: prob0
    register: lb
  # Creating a Virtual Network Interface
  ## For WebServer1
  - name: Create virtual network interface card
    azure_rm_networkinterface:
      resource_group: mknilavembu_sea
      name: "webserver01-nic"
      virtual_network: seavnet
      subnet: sea_web_subnet
      security_group: sea_nsg
      ip_configurations:
      - name: lbipconfig_w1
        application_security_groups:
        - name: sea_web_asg
          resource_group: mknilavembu_sea
        load_balancer_backend_address_pools:
        - "{{ lb.state.backend_address_pools[0].id }}"
        - name: lb_bp
          loadbalancer: sea_lb
  ## For WebServer2
  - name: Create virtual network interface card
    azure_rm_networkinterface:
      resource_group: mknilavembu_sea
      name: "webserver02-nic"
      virtual_network: seavnet
      subnet: sea_web_subnet
      security_group: sea_nsg
      ip_configurations:
      - name: lbipconfig_w2
        application_security_groups:
        - name: sea_web_asg
          resource_group: mknilavembu_sea
        load_balancer_backend_address_pools:
        - name: lb_bp
          loadbalancer: sea_lb
  ## For JumpServer
  - name: Create virtual network interface card
    azure_rm_networkinterface:
      resource_group: mknilavembu_sea
      name: "jumpserver-nic"
      virtual_network: seavnet
      subnet: sea_jump_subnet
      public_ip_name: jump_pubip
      security_group: sea_nsg
      ip_configurations:
      - name: lbipconfig_j
        application_security_groups:
        - name: sea_jump_asg
          resource_group: mknilavembu_sea
  # Creating an Availability Set
  - name: Create an availability set for managed disk vm
    azure_rm_availabilityset:
      name: sea_avs
      resource_group: mknilavembu_sea
      platform_update_domain_count: 1
      platform_fault_domain_count: 2
      sku: Aligned
  # Creating a Virtual Machine
  ## Creating webserver01 vm
  - name: Create a webserver01 vm
    azure_rm_virtualmachine:
      resource_group: mknilavembu_sea
      name: "webserver01"
      vm_size: Standard_DS1_v2
      admin_username: mkadmin
      admin_password: "CfsPassword@123"
      network_interfaces: "webserver01-nic"
      availability_set: sea_avs
      image:
        offer: WindowsServer
        publisher: MicrosoftWindowsServer
        sku: '2016-Datacenter'
        version: latest
  ## Creating webserver11 vm
  - name: Create a webserver11 vm
    azure_rm_virtualmachine:
      resource_group: mknilavembu_sea
      name: "webserver02"
      vm_size: Standard_DS1_v2
      admin_username: mkadmin
      admin_password: "CfsPassword@123"
      network_interfaces: "webserver02-nic"
      availability_set: sea_avs
      image:
        offer: WindowsServer
        publisher: MicrosoftWindowsServer
        sku: '2016-Datacenter'
        version: latest
  ## Creating jumpserver vm
  - name: Create a jumpserver vm
    azure_rm_virtualmachine:
      resource_group: mknilavembu_sea
      name: "jumpserver"
      vm_size: Standard_DS1_v2
      admin_username: mkadmin
      admin_password: "CfsPassword@123"
      network_interfaces: "jumpserver-nic"
      image:
        offer: WindowsServer
        publisher: MicrosoftWindowsServer
        sku: '2016-Datacenter'
        version: latest
  # Creating an Storage Account
  - name: Create a storage Account
    azure_rm_storageaccount:
      resource_group: mknilavembu_sea
      name: 00nilstorage_sea
      type: Standard_ZRS
  ## Creating a container blob
  - name: Create a container sales
    azure_rm_storageblob:
      resource_group: mknilavembu_sea
      storage_account_name: 00nilstorage_sea
      container: sales_sea
  # Creating a Recovery Storage Vault --- NOT WORKING
  - name: Create Azure Recovery Service vault
    azure_rm_recoveryservicesvault:
      resource_group: mknilavembu_sea
      name: sea_bkp
      location: australiaeast
      state: present
  ## Create Backup Policy
  - name: Create VM Backup Policy
    azure_rm_backvmuppolicy:
      name: web_bckp_policy
      vault_name: sea_bkp
      resource_group: mknilavembu_sea
      time: '18:00'
      weekdays: ['Monday', 'Thursday', 'Friday']
      weeks: ['First', 'Fourth']
      months: ['February', 'November']
      count: 4
      state: present
    register: wbkp    
  ## Enabling Backup for VM
  ### Webserver01
  - name: Get VM01 Fact
    azure_rm_virtualmachine_info:
      resource_group: mknilavembu_sea
      name: "webserver01"
    register: vm1
  - name: Enabling/Updating protection for the Azure Webserver01
    azure_rm_backupazurevm:
      resource_group: mknilavembu_sea
      recovery_vault_name: sea_bkp
      resource_id: "{{ vm1.vms.id }}"
      backup_policy_id: "{{ wbkp.id }}"
      state: 'create'
  ### Webserver02
  - name: Get VM02 Fact
    azure_rm_virtualmachine_info:
      resource_group: mknilavembu_sea
      name: "webserver02"
    register: vm2
  - name: Enabling/Updating protection for the Azure Webserver01
    azure_rm_backupazurevm:
      resource_group: mknilavembu_sea
      recovery_vault_name: sea_bkp
      resource_id: "{{ vm2.vms.id }}"
      backup_policy_id: "{{ wbkp.id }}"
      state: 'create'